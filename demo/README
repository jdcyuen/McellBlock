
Once the eclipse project is imported from git, https://github.com/jdcyuen/mcellblock.git
It can be compile by right clicking on the root of the project, select Run As -> Maven clean, then Run As -> Maven install
To run the application right clicking on the root of the project, select Run As -> Spring Boot App

1. So the first thing our application app would do to allow our customers to access the 
   Gilded Rose inventory of items is to require them to register. This is so that we may have them
   authenticate and provide basic information necessary to purchase and item such as a credit card, etc.
   
2. The first line of defense normally for a REST API is to require the user to use a HTTPS connection however for 
   this example I chose not to implement that since it requires using a certificate and to keep the setup of this demo
   as simple as possible.
   
3. Next I would secure the REST API through the use of JSON web tokens (JWT).

4. So a Gilded Rose merchant would authenticate to the REST API after registering.
   Then receive back a JWT, and then thereafter pass the JWT,  in the Authorization header using the Bearer schema, to the REST API.
   
   For example,
   In this example the API expects a POST body with “username”, “password” and “rememberMe” fields. jq is used to parse the JSON response, 
   which contains the token in a field called “id_token”.

   TOKEN=$(curl -s -X POST -H 'Accept: application/json' -H 'Content-Type: application/json' --data '{"username":"{username}","password":"{password}",
   "rememberMe":false}' https://{hostname}/api/authenticate | jq -r '.id_token')
      
   To pass the Bearer token in the Authorization Header the Gilded Rose merchant use the next command:
   curl -H 'Accept: application/json' -H "Authorization: Bearer ${TOKEN}" https://{hostname}:{port}/inventory
   
   Online JWT builders, http://jwtbuilder.jamiekurtz.com/, https://kjur.github.io/jsjws/tool_jwt.html, https://www.jsonwebtoken.io/
   
5. Thereafter any communication with API must include the JWT token.

6. By receiving a token, the REST api can know that the merchant is authenticated. However for this coding exercise, I chose to implement basic authentication. 
   The username can be retrieved from HttpServletRequest by using the user principal to get the username. If a username is present, then we can assume that the
   user was successfully authenticated.

7. The usage scenario:

	* To view inventory:
		curl http://localhost:8085/inventory
		
		response:
			[{"id":1,"name":"Everlane","description":"Baccarate Cocktail Party in a Box","category":"Crystal","price":"1995.00"},
			{"id":2,"name":"KRIS BEAR","description":"KRIS BEAR - A LOVELY SURPRISE","category":"Crystal","price":"195.00"},
			{"id":3,"name":"NECKLACE","description":"MIX NECKLACE, WHITE, RHODIUM PLATING","category":"Jewelry","price":"399.00"},
			{"id":4,"name":"EMERALD NECKLACE","description":"Pear Shaped Emerald Teardrop Necklace in Yellow Gold from Angara.com","category":"Jewelry","price":"798.00"},
			{"id":5,"name":"Amethyst Cocktail Ring","description":"Vintage Inspired Solitaire Cushion Amethyst Cocktail Ring","category":"Jewelry","price":"509.00"}]
		
	* To view a list of product categories:
		curl --user name:password http://localhost:8085/inventory/categories
		
		response:
			["Jewelry","Crystal"]
		
	* To view list of products for a category, for example Crystal
		
		curl --user name:password http://localhost:8085//inventory/Crystal/items
		
		response:
			[{"id":1,"name":"Everlane","description":"Baccarate Cocktail Party in a Box","category":"Crystal","price":"1995.00"},
			{"id":2,"name":"KRIS BEAR","description":"KRIS BEAR - A LOVELY SURPRISE","category":"Crystal","price":"195.00"}]
		
	* To view a specific item, for example item 1 in the Crystal category
		curl --user name:password http://localhost:8085/inventory/Crystal/item/1
		
		response:
			{"id":1,"name":"Everlane","description":"Baccarate Cocktail Party in a Box","category":"Crystal","price":"1995.00"}
	
	* To purchase an item
		curl --user name:password http://localhost:8085/inventory/category/item/1/purchase
		
		response:
			Your purchase of Everlane for the price of 1995.500 has been submitted.
			
		response if surge pricing had been applied:
		
			Your purchase of Everlane for the price of 2194.500 has been submitted.
	* For an item out of stock		
		curl --user name:password http://localhost:8085/inventory/category/item/2/purchase
		response:
			The item KRIS BEAR you wish to purchase is out of stock. We apologize for any inconvenience.
	
